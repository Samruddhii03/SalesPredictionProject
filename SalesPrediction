import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import plotly.express as px
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score, mean_absolute_percentage_error
from sklearn.linear_model import LinearRegression
import IPython.display as dsp

sales=pd.read_csv('advertising.csv')

sales.head()

sales.tail()

sales.info()

sales.describe()


sales.size

sales.shape

sales.duplicated().sum()

sales.isna().sum()

sales[sales.duplicated()]

sales.head()

px.scatter(sales,x='Sales',y='Newspaper',width=500,height=650,title='TV Vs Newspaper')

px.scatter(sales,x='Sales',y='TV',width=600,height=650,title='TV vs Sales')

px.scatter(sales,x='Sales',y='Radio',width=600,height=650,title='TV vs Radio')

b=sales['Sales']
a=sales.drop(['Sales'],axis=1)

a_train,a_test,b_train,b_test=train_test_split(a,b,test_size=0.4,random_state=40)

LR=LinearRegression()

LR.fit(a_train,b_train)

LR.coef_

LR.intercept_

b_pred=LR.predict(a_test)

b_pred[:5]

mean_squared_error(b_test,b_pred)

r2_score(b_test,b_pred)

mean_absolute_percentage_error(b_test,b_pred)

sales_test_pred=pd.DataFrame({'Actual Values':b_test, "Predicted Values":b_pred})

sales_test_pred

px.scatter({'Actual Values':b_test, "Predicted Values":b_pred})
